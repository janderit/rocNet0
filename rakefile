require 'albacore'
gem 'rubyzip'
require 'zip/zip'
require 'zip/zipfilesystem'


PRODUCT_NAME = "rocNet Kernel"
COMPANY_NAME = "Jander.IT"
COPYRIGHT = "(c) 2012 Jander.IT"
WORKSPACE = ENV["WORKSPACE"] || "."
BUILD_NUMBER = ENV["BUILD_NUMBER"] || "0"
TARGET = :Debug

NUNIT_EXE="C:/Program Files (x86)/NUnit 2.6/bin/nunit-console"
DOTNET_FRAMEWORK_VERSION="v4.0.30319"


projects = (Dir.entries(WORKSPACE)-[".",".."]).select{|x|File.directory?(File.join(WORKSPACE,x))}.select{|x|File.exists?(File.join(WORKSPACE,x,"Properties","AssemblyInfo.cs"))}

task :default => [:kernel,:ticker]

task :kernel => [:kernel_all_build,:kerneltest]
task :ticker => [:ticker_all_build,:tickertest]

task :kernel_all_build => [:kernel_build,:libkernel_build,:libkernel_memcache_build,:libkernel_zmq_build]
task :ticker_all_build => [:libticker_build,:libticker_zmq_build]

desc "Build rocNet kernel"
msbuild :kernel_build => [:libkernel_build,:kernel_info] do |msb|
  msb.properties :configuration => TARGET
  msb.targets :Clean, :Build
  msb.solution = "rocnet.kernel/rocnet.kernel.csproj"
end

assemblyinfo :kernel_info => :loadtargetversion do |asm|
  asm.output_file = "rocnet.kernel/Properties/AssemblyInfo.cs"  
  asm.title = "Kernel component"
  asm.description = ""
  asm.product_name = PRODUCT_NAME
  asm.company_name = COMPANY_NAME
  asm.copyright = COPYRIGHT
  asm.version = VERSIONSTRING
  asm.file_version = VERSIONSTRING
  asm.custom_attributes :ComVisible => false
end

desc "Build kernel tests"
msbuild :kerneltests_build => [:kernel_build,:libkernel_build,:libkernel_memcache_build,:libkernel_zmq_build] do |msb|
  msb.properties :configuration => TARGET
  msb.targets :Clean, :Build
  msb.solution = "KernelTests/KernelTests.csproj"
end

desc "Build libkernel"
msbuild :libkernel_build =>[:libkernel_info] do |msb|
  msb.properties :configuration => TARGET
  msb.targets :Clean, :Build
  msb.solution = "LibKernel/LibKernel.csproj"
end

assemblyinfo :libkernel_info => :loadtargetversion do |asm|
  asm.output_file = "LibKernel/Properties/AssemblyInfo.cs"  
  asm.title = "Kernel client library"
  asm.description = ""
  asm.product_name = PRODUCT_NAME
  asm.company_name = COMPANY_NAME
  asm.copyright = COPYRIGHT
  asm.version = VERSIONSTRING
  asm.file_version = VERSIONSTRING
  asm.custom_attributes :ComVisible => false
end

desc "Build libkernel-memcache"
msbuild :libkernel_memcache_build =>[:libkernel_memcache_info] do |msb|
  msb.properties :configuration => TARGET
  msb.targets :Clean, :Build
  msb.solution = "LibKernel-memcache/LibKernel-memcache.csproj"
end

assemblyinfo :libkernel_memcache_info => :loadtargetversion do |asm|
  asm.output_file = "LibKernel-memcache/Properties/AssemblyInfo.cs"  
  asm.title = "Kernel in-memory cache"
  asm.description = ""
  asm.product_name = PRODUCT_NAME
  asm.company_name = COMPANY_NAME
  asm.copyright = COPYRIGHT
  asm.version = VERSIONSTRING
  asm.file_version = VERSIONSTRING
  asm.custom_attributes :ComVisible => false
end

desc "Build libkernel-zmq"
msbuild :libkernel_zmq_build => [:libkernel_zmq_info] do |msb|
  msb.properties :configuration => TARGET
  msb.targets :Clean, :Build
  msb.solution = "LibKernel-zmq/LibKernel-zmq.csproj"
end

assemblyinfo :libkernel_zmq_info => :loadtargetversion do |asm|
  asm.output_file = "LibKernel-zmq/Properties/AssemblyInfo.cs"  
  asm.title = "Kernel zeromq transport (x64)"
  asm.description = ""
  asm.product_name = PRODUCT_NAME
  asm.company_name = COMPANY_NAME
  asm.copyright = COPYRIGHT
  asm.version = VERSIONSTRING
  asm.file_version = VERSIONSTRING
  asm.custom_attributes :ComVisible => false
end

desc "Build ticker tests"
msbuild :tickertests_build => [:libticker_build,:libticker_zmq_build] do |msb|
  msb.properties :configuration => TARGET
  msb.targets :Clean, :Build
  msb.solution = "TickerTests/TickerTests.csproj"
end

desc "Build libticker"
msbuild :libticker_build =>[:libticker_info] do |msb|
  msb.properties :configuration => TARGET
  msb.targets :Clean, :Build
  msb.solution = "LibTicker/LibTicker.csproj"
end

assemblyinfo :libticker_info => :loadtargetversion do |asm|
  asm.output_file = "LibTicker/Properties/AssemblyInfo.cs"
  asm.title = "Ticker client library"
  asm.description = ""
  asm.product_name = PRODUCT_NAME
  asm.company_name = COMPANY_NAME
  asm.copyright = COPYRIGHT
  asm.version = VERSIONSTRING
  asm.file_version = VERSIONSTRING
  asm.custom_attributes :ComVisible => false
end


desc "Build libticker-zmq"
msbuild :libticker_zmq_build =>[:libticker_zmq_info] do |msb|
  msb.properties :configuration => TARGET
  msb.targets :Clean, :Build
  msb.solution = "LibTicker-zmq/LibTicker-zmq.csproj"
end

assemblyinfo :libticker_zmq_info => :loadtargetversion do |asm|
  asm.output_file = "LibTicker-zmq/Properties/AssemblyInfo.cs"
  asm.title = "Ticker zeromq transport (x64)"
  asm.description = ""
  asm.product_name = PRODUCT_NAME
  asm.company_name = COMPANY_NAME
  asm.copyright = COPYRIGHT
  asm.version = VERSIONSTRING
  asm.file_version = VERSIONSTRING
  asm.custom_attributes :ComVisible => false
end


task :loadtargetversion do 	
	file = File.new("version.txt", "r")
	VERSIONSTRING=file.gets+BUILD_NUMBER
	file.close
	puts VERSIONSTRING
end


desc "Test rocNet Kernel" 
nunit :kerneltest => :kerneltests_build do |nunit|
	nunit.command = NUNIT_EXE
	nunit.options '/framework '+DOTNET_FRAMEWORK_VERSION
	nunit.assemblies "#{WORKSPACE}/KernelTests/Bin/#{TARGET}/KernelTests.dll"
end

desc "Test Ticker"
nunit :tickertest => :tickertests_build do |nunit|
	nunit.command = NUNIT_EXE
	nunit.options '/framework '+DOTNET_FRAMEWORK_VERSION
	nunit.assemblies "#{WORKSPACE}/TickerTests/Bin/#{TARGET}/TickerTests.dll"
end